// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/gospel_contacts_model.dart';
import 'models/gospel_map_info_model.dart';
import 'models/gospel_onboarding_model.dart';
import 'models/gospel_profile_model.dart';
import 'models/pray_model.dart';
import 'models/read_data_model.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 1564221959796653090),
      name: 'Bookmark',
      lastPropertyId: const obx_int.IdUid(7, 3461504713274414794),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4915813457193165755),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 1707220957310439508),
            name: 'timestamp',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 1224087394471124274),
            name: 'book',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1397637348677427392),
            name: 'chapter',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8684879738310499732),
            name: 'verse',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3461504713274414794),
            name: 'text',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 6533227380126726742),
      name: 'Favorite',
      lastPropertyId: const obx_int.IdUid(7, 6412078794772483524),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1691490097731468709),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5801590477981359735),
            name: 'timestamp',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4641527470536424589),
            name: 'book',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6747660567777066027),
            name: 'chapter',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6519476254107087068),
            name: 'verse',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 6412078794772483524),
            name: 'text',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 7180550933572743612),
      name: 'GospelProfile',
      lastPropertyId: const obx_int.IdUid(8, 6096790601858846356),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1364242396660614975),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2302095508794830353),
            name: 'firstName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8743705866401658922),
            name: 'lastName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2714564161457641165),
            name: 'address',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7502466368167119551),
            name: 'naturalBirthday',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7307278761368581009),
            name: 'phone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5915162108014622039),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6096790601858846356),
            name: 'spiritualBirthday',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(5, 5880660969620993844),
      name: 'MapInfo',
      lastPropertyId: const obx_int.IdUid(8, 9180129616829342655),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8650291611212797815),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5769131099805835547),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7426385645124971727),
            name: 'filePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 9003090834098243929),
            name: 'downloadUrl',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6215078388360593125),
            name: 'isTemporary',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 8808659974124029571),
            name: 'latitude',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 1724995603526487338),
            name: 'longitude',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 9180129616829342655),
            name: 'zoomLevel',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(6, 2017899559392564116),
      name: 'Prayer',
      lastPropertyId: const obx_int.IdUid(5, 4141169794387324215),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 7787554909253663766),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 6300373132178397088),
            name: 'prayerId',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(5, 437635874454906621)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9200933325436161546),
            name: 'richTextJson',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4293879363398942463),
            name: 'status',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4141169794387324215),
            name: 'timestamp',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 6844445452173387416),
      name: 'VerseData',
      lastPropertyId: const obx_int.IdUid(5, 8384470677215506640),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3497229043027209986),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 408164767380791373),
            name: 'book',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 3119496207804078908),
            name: 'chapter',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2878511913252678567),
            name: 'verse',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8384470677215506640),
            name: 'text',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(9, 5770339252948091790),
      name: 'BibleNote',
      lastPropertyId: const obx_int.IdUid(5, 3972436692830592425),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8989325486268605801),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 451693063197959271),
            name: 'verse',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7075094048813648914),
            name: 'verseText',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2316969086444700822),
            name: 'note',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 3972436692830592425),
            name: 'timestamp',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(10, 3389449951895006168),
      name: 'GospelOnboardingModel',
      lastPropertyId: const obx_int.IdUid(24, 414391667364825106),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5399148177399167994),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2526756639688547041),
            name: 'onboardingComplete',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6329711673173354958),
            name: 'homeSelectedFont',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 8792795203669504177),
            name: 'homeSelectedFontSize',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 7294187251247087196),
            name: 'lastSelectedBook',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 4020544409876086105),
            name: 'lastSelectedChapter',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3679007128647077019),
            name: 'lastSelectedStudyBook',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 8167744845215030539),
            name: 'lastSelectedStudyChapter',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 3010279209188300364),
            name: 'lastBookmark',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 9024730214513322111),
            name: 'lastFavorite',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 1726662430058713887),
            name: 'lastBibleNote',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 4861470943670323685),
            name: 'lastPersonalNote',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(13, 4754148132242193147),
            name: 'lastStudyNote',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(14, 2483148096831897720),
            name: 'lastSearch',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(15, 4154865064028788069),
            name: 'lastContact',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(16, 4359268578910176184),
            name: 'currentMap',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(17, 8461594347426692131),
            name: 'readChaptersCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(18, 1584142596132862545),
            name: 'bookmarkCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(19, 5771938534725319112),
            name: 'favoriteCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(20, 8423365914842005533),
            name: 'studiedChaptersCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(21, 6808189711454242161),
            name: 'bibleNoteCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(22, 2093864949507262913),
            name: 'personalNoteCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(23, 6330153233407918998),
            name: 'studyNoteCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(24, 414391667364825106),
            name: 'searchCount',
            type: 6,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(11, 8850626731805914718),
      name: 'PersonalNote',
      lastPropertyId: const obx_int.IdUid(3, 4935745342447936035),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3735328665101799348),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 9150367029031674693),
            name: 'note',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4935745342447936035),
            name: 'timestamp',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(12, 7372177810010134879),
      name: 'StudyNote',
      lastPropertyId: const obx_int.IdUid(3, 2056594304209781223),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3942024250186812622),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5393830320684794412),
            name: 'note',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 2056594304209781223),
            name: 'timestamp',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(13, 7575709876387753993),
      name: 'UserPreference',
      lastPropertyId: const obx_int.IdUid(35, 8321246365657091964),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 140110587427926184),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(34, 7703881680418334943),
            name: 'key',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(35, 8321246365657091964),
            name: 'value',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(14, 924073218463042741),
      name: 'Contact',
      lastPropertyId: const obx_int.IdUid(12, 7433356272096871408),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 4867584557059048970),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 235166160723851839),
            name: 'contactId',
            type: 6,
            flags: 40,
            indexId: const obx_int.IdUid(6, 4822508587456391542)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 7032511538641159679),
            name: 'firstName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3329343111773065274),
            name: 'lastName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 1820701401752523955),
            name: 'address',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 1126696105862625751),
            name: 'birthday',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2091532291424392655),
            name: 'latitude',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6436227468500722705),
            name: 'longitude',
            type: 8,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 2815769865206209035),
            name: 'phone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 552988315970912758),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 5209334292829028749),
            name: 'picturePath',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 7433356272096871408),
            name: 'notes',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(14, 924073218463042741),
      lastIndexId: const obx_int.IdUid(6, 4822508587456391542),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [7347740440957002375, 912852536589970541],
      retiredIndexUids: const [2854475223296293918, 1054823213086138289],
      retiredPropertyUids: const [
        8904482984477880097,
        4124871993102925197,
        5551884292044601712,
        7865976328823303765,
        951054843269717882,
        8049501932357739808,
        5023574416062896784,
        4363939216835710488,
        1075318370689979386,
        2364456044833275653,
        7075911904011204483,
        5724955142714838808,
        2743135914098810544,
        485655053513211999,
        3255395804575318386,
        5424241127109884032,
        7612447900199187029,
        6128587973440749473,
        6348119708638421474,
        5256551813793772312,
        803739059686484036,
        8385635290102181575,
        8696039751030500734,
        4120758035873038600,
        3503296258194356606,
        4955963972701976425,
        5030094612081641392,
        1846649295714602332,
        6965658796334171842,
        6838195710791870316,
        5776230101967901210,
        7462132937659548464,
        3516105617668731951,
        3101525249037883754,
        7282203015725314671,
        6213839433809340496,
        6735528501277913648,
        3494840230127631421,
        6668306291139215579,
        4213928305564964351,
        1723703522330436879,
        8839836728419781865,
        2841784714291512681,
        3885343616269700224,
        7902996283135367592,
        4669299506805892699,
        608763754128537773,
        5612520008368514075,
        8571612082746762372,
        6614831770898115345,
        782477427192423907,
        4844656773679633854,
        8385854327588967277,
        4019495834045068998,
        659480161912730318,
        4157817510339571906
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    Bookmark: obx_int.EntityDefinition<Bookmark>(
        model: _entities[0],
        toOneRelations: (Bookmark object) => [],
        toManyRelations: (Bookmark object) => {},
        getId: (Bookmark object) => object.id,
        setId: (Bookmark object, int id) {
          object.id = id;
        },
        objectToFB: (Bookmark object, fb.Builder fbb) {
          final bookOffset = fbb.writeString(object.book);
          final textOffset = fbb.writeString(object.text);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.timestamp.millisecondsSinceEpoch);
          fbb.addOffset(3, bookOffset);
          fbb.addInt64(4, object.chapter);
          fbb.addInt64(5, object.verse);
          fbb.addOffset(6, textOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final bookParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final chapterParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final verseParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final textParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final object = Bookmark(
              book: bookParam,
              chapter: chapterParam,
              verse: verseParam,
              text: textParam,
              timestamp: timestampParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    Favorite: obx_int.EntityDefinition<Favorite>(
        model: _entities[1],
        toOneRelations: (Favorite object) => [],
        toManyRelations: (Favorite object) => {},
        getId: (Favorite object) => object.id,
        setId: (Favorite object, int id) {
          object.id = id;
        },
        objectToFB: (Favorite object, fb.Builder fbb) {
          final bookOffset = fbb.writeString(object.book);
          final textOffset = fbb.writeString(object.text);
          fbb.startTable(8);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.timestamp.millisecondsSinceEpoch);
          fbb.addOffset(3, bookOffset);
          fbb.addInt64(4, object.chapter);
          fbb.addInt64(5, object.verse);
          fbb.addOffset(6, textOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final bookParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final chapterParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0);
          final verseParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final textParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 16, '');
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0));
          final object = Favorite(
              book: bookParam,
              chapter: chapterParam,
              verse: verseParam,
              text: textParam,
              timestamp: timestampParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    GospelProfile: obx_int.EntityDefinition<GospelProfile>(
        model: _entities[2],
        toOneRelations: (GospelProfile object) => [],
        toManyRelations: (GospelProfile object) => {},
        getId: (GospelProfile object) => object.id,
        setId: (GospelProfile object, int id) {
          object.id = id;
        },
        objectToFB: (GospelProfile object, fb.Builder fbb) {
          final firstNameOffset = object.firstName == null
              ? null
              : fbb.writeString(object.firstName!);
          final lastNameOffset = object.lastName == null
              ? null
              : fbb.writeString(object.lastName!);
          final addressOffset =
              object.address == null ? null : fbb.writeString(object.address!);
          final phoneOffset =
              object.phone == null ? null : fbb.writeString(object.phone!);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, firstNameOffset);
          fbb.addOffset(2, lastNameOffset);
          fbb.addOffset(3, addressOffset);
          fbb.addInt64(4, object.naturalBirthday?.millisecondsSinceEpoch);
          fbb.addOffset(5, phoneOffset);
          fbb.addOffset(6, emailOffset);
          fbb.addInt64(7, object.spiritualBirthday?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final naturalBirthdayValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final spiritualBirthdayValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final firstNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final lastNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final naturalBirthdayParam = naturalBirthdayValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(naturalBirthdayValue);
          final phoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final spiritualBirthdayParam = spiritualBirthdayValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(spiritualBirthdayValue);
          final object = GospelProfile(
              firstName: firstNameParam,
              lastName: lastNameParam,
              address: addressParam,
              naturalBirthday: naturalBirthdayParam,
              phone: phoneParam,
              email: emailParam,
              spiritualBirthday: spiritualBirthdayParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    MapInfo: obx_int.EntityDefinition<MapInfo>(
        model: _entities[3],
        toOneRelations: (MapInfo object) => [],
        toManyRelations: (MapInfo object) => {},
        getId: (MapInfo object) => object.id,
        setId: (MapInfo object, int id) {
          object.id = id;
        },
        objectToFB: (MapInfo object, fb.Builder fbb) {
          final nameOffset = fbb.writeString(object.name);
          final filePathOffset = fbb.writeString(object.filePath);
          final downloadUrlOffset = fbb.writeString(object.downloadUrl);
          fbb.startTable(9);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, nameOffset);
          fbb.addOffset(2, filePathOffset);
          fbb.addOffset(3, downloadUrlOffset);
          fbb.addBool(4, object.isTemporary);
          fbb.addFloat64(5, object.latitude);
          fbb.addFloat64(6, object.longitude);
          fbb.addInt64(7, object.zoomLevel);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final filePathParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final downloadUrlParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 10, '');
          final isTemporaryParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false);
          final latitudeParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 14, 0);
          final longitudeParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final zoomLevelParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final object = MapInfo(
              name: nameParam,
              filePath: filePathParam,
              downloadUrl: downloadUrlParam,
              isTemporary: isTemporaryParam,
              latitude: latitudeParam,
              longitude: longitudeParam,
              zoomLevel: zoomLevelParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    Prayer: obx_int.EntityDefinition<Prayer>(
        model: _entities[4],
        toOneRelations: (Prayer object) => [],
        toManyRelations: (Prayer object) => {},
        getId: (Prayer object) => object.id,
        setId: (Prayer object, int id) {
          object.id = id;
        },
        objectToFB: (Prayer object, fb.Builder fbb) {
          final prayerIdOffset = fbb.writeString(object.prayerId);
          final richTextJsonOffset = fbb.writeString(object.richTextJson);
          final statusOffset = fbb.writeString(object.status);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, prayerIdOffset);
          fbb.addOffset(2, richTextJsonOffset);
          fbb.addOffset(3, statusOffset);
          fbb.addInt64(4, object.timestamp.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final prayerIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final richTextJsonParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, '');
          final statusParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final object = Prayer(
              id: idParam,
              prayerId: prayerIdParam,
              richTextJson: richTextJsonParam,
              status: statusParam,
              timestamp: timestampParam);

          return object;
        }),
    VerseData: obx_int.EntityDefinition<VerseData>(
        model: _entities[5],
        toOneRelations: (VerseData object) => [],
        toManyRelations: (VerseData object) => {},
        getId: (VerseData object) => object.id,
        setId: (VerseData object, int id) {
          object.id = id;
        },
        objectToFB: (VerseData object, fb.Builder fbb) {
          final bookOffset = fbb.writeString(object.book);
          final textOffset = fbb.writeString(object.text);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, bookOffset);
          fbb.addInt64(2, object.chapter);
          fbb.addInt64(3, object.verse);
          fbb.addOffset(4, textOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final bookParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final chapterParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0);
          final verseParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0);
          final textParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final object = VerseData(
              book: bookParam,
              chapter: chapterParam,
              verse: verseParam,
              text: textParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    BibleNote: obx_int.EntityDefinition<BibleNote>(
        model: _entities[6],
        toOneRelations: (BibleNote object) => [],
        toManyRelations: (BibleNote object) => {},
        getId: (BibleNote object) => object.id,
        setId: (BibleNote object, int id) {
          object.id = id;
        },
        objectToFB: (BibleNote object, fb.Builder fbb) {
          final verseOffset = fbb.writeString(object.verse);
          final verseTextOffset = fbb.writeString(object.verseText);
          final noteOffset = fbb.writeString(object.note);
          fbb.startTable(6);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, verseOffset);
          fbb.addOffset(2, verseTextOffset);
          fbb.addOffset(3, noteOffset);
          fbb.addInt64(4, object.timestamp.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final verseParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final verseTextParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final noteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 12, 0));
          final object = BibleNote(
              verse: verseParam,
              verseText: verseTextParam,
              note: noteParam,
              timestamp: timestampParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    GospelOnboardingModel: obx_int.EntityDefinition<GospelOnboardingModel>(
        model: _entities[7],
        toOneRelations: (GospelOnboardingModel object) => [],
        toManyRelations: (GospelOnboardingModel object) => {},
        getId: (GospelOnboardingModel object) => object.id,
        setId: (GospelOnboardingModel object, int id) {
          object.id = id;
        },
        objectToFB: (GospelOnboardingModel object, fb.Builder fbb) {
          final homeSelectedFontOffset = object.homeSelectedFont == null
              ? null
              : fbb.writeString(object.homeSelectedFont!);
          final lastSelectedBookOffset = object.lastSelectedBook == null
              ? null
              : fbb.writeString(object.lastSelectedBook!);
          final lastSelectedChapterOffset = object.lastSelectedChapter == null
              ? null
              : fbb.writeString(object.lastSelectedChapter!);
          final lastSelectedStudyBookOffset =
              object.lastSelectedStudyBook == null
                  ? null
                  : fbb.writeString(object.lastSelectedStudyBook!);
          final lastSelectedStudyChapterOffset =
              object.lastSelectedStudyChapter == null
                  ? null
                  : fbb.writeString(object.lastSelectedStudyChapter!);
          final lastBookmarkOffset = object.lastBookmark == null
              ? null
              : fbb.writeString(object.lastBookmark!);
          final lastFavoriteOffset = object.lastFavorite == null
              ? null
              : fbb.writeString(object.lastFavorite!);
          final lastBibleNoteOffset = object.lastBibleNote == null
              ? null
              : fbb.writeString(object.lastBibleNote!);
          final lastPersonalNoteOffset = object.lastPersonalNote == null
              ? null
              : fbb.writeString(object.lastPersonalNote!);
          final lastStudyNoteOffset = object.lastStudyNote == null
              ? null
              : fbb.writeString(object.lastStudyNote!);
          final lastSearchOffset = object.lastSearch == null
              ? null
              : fbb.writeString(object.lastSearch!);
          final lastContactOffset = object.lastContact == null
              ? null
              : fbb.writeString(object.lastContact!);
          final currentMapOffset = object.currentMap == null
              ? null
              : fbb.writeString(object.currentMap!);
          fbb.startTable(25);
          fbb.addInt64(0, object.id);
          fbb.addBool(1, object.onboardingComplete);
          fbb.addOffset(2, homeSelectedFontOffset);
          fbb.addFloat64(3, object.homeSelectedFontSize);
          fbb.addOffset(4, lastSelectedBookOffset);
          fbb.addOffset(5, lastSelectedChapterOffset);
          fbb.addOffset(6, lastSelectedStudyBookOffset);
          fbb.addOffset(7, lastSelectedStudyChapterOffset);
          fbb.addOffset(8, lastBookmarkOffset);
          fbb.addOffset(9, lastFavoriteOffset);
          fbb.addOffset(10, lastBibleNoteOffset);
          fbb.addOffset(11, lastPersonalNoteOffset);
          fbb.addOffset(12, lastStudyNoteOffset);
          fbb.addOffset(13, lastSearchOffset);
          fbb.addOffset(14, lastContactOffset);
          fbb.addOffset(15, currentMapOffset);
          fbb.addInt64(16, object.readChaptersCount);
          fbb.addInt64(17, object.bookmarkCount);
          fbb.addInt64(18, object.favoriteCount);
          fbb.addInt64(19, object.studiedChaptersCount);
          fbb.addInt64(20, object.bibleNoteCount);
          fbb.addInt64(21, object.personalNoteCount);
          fbb.addInt64(22, object.studyNoteCount);
          fbb.addInt64(23, object.searchCount);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final onboardingCompleteParam =
              const fb.BoolReader().vTableGet(buffer, rootOffset, 6, false);
          final homeSelectedFontParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 8);
          final homeSelectedFontSizeParam = const fb.Float64Reader()
              .vTableGetNullable(buffer, rootOffset, 10);
          final lastSelectedBookParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 12);
          final lastSelectedChapterParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 14);
          final lastSelectedStudyBookParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 16);
          final lastSelectedStudyChapterParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 18);
          final lastBookmarkParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 20);
          final lastFavoriteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 22);
          final lastBibleNoteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 24);
          final lastPersonalNoteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 26);
          final lastStudyNoteParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 28);
          final lastSearchParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 30);
          final lastContactParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 32);
          final currentMapParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 34);
          final readChaptersCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 36);
          final bookmarkCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 38);
          final favoriteCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 40);
          final studiedChaptersCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 42);
          final bibleNoteCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 44);
          final personalNoteCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 46);
          final studyNoteCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 48);
          final searchCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 50);
          final object = GospelOnboardingModel(
              id: idParam,
              onboardingComplete: onboardingCompleteParam,
              homeSelectedFont: homeSelectedFontParam,
              homeSelectedFontSize: homeSelectedFontSizeParam,
              lastSelectedBook: lastSelectedBookParam,
              lastSelectedChapter: lastSelectedChapterParam,
              lastSelectedStudyBook: lastSelectedStudyBookParam,
              lastSelectedStudyChapter: lastSelectedStudyChapterParam,
              lastBookmark: lastBookmarkParam,
              lastFavorite: lastFavoriteParam,
              lastBibleNote: lastBibleNoteParam,
              lastPersonalNote: lastPersonalNoteParam,
              lastStudyNote: lastStudyNoteParam,
              lastSearch: lastSearchParam,
              lastContact: lastContactParam,
              currentMap: currentMapParam,
              readChaptersCount: readChaptersCountParam,
              bookmarkCount: bookmarkCountParam,
              favoriteCount: favoriteCountParam,
              studiedChaptersCount: studiedChaptersCountParam,
              bibleNoteCount: bibleNoteCountParam,
              personalNoteCount: personalNoteCountParam,
              studyNoteCount: studyNoteCountParam,
              searchCount: searchCountParam);

          return object;
        }),
    PersonalNote: obx_int.EntityDefinition<PersonalNote>(
        model: _entities[8],
        toOneRelations: (PersonalNote object) => [],
        toManyRelations: (PersonalNote object) => {},
        getId: (PersonalNote object) => object.id,
        setId: (PersonalNote object, int id) {
          object.id = id;
        },
        objectToFB: (PersonalNote object, fb.Builder fbb) {
          final noteOffset = fbb.writeString(object.note);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, noteOffset);
          fbb.addInt64(2, object.timestamp.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final noteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final object = PersonalNote(
              note: noteParam, timestamp: timestampParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    StudyNote: obx_int.EntityDefinition<StudyNote>(
        model: _entities[9],
        toOneRelations: (StudyNote object) => [],
        toManyRelations: (StudyNote object) => {},
        getId: (StudyNote object) => object.id,
        setId: (StudyNote object, int id) {
          object.id = id;
        },
        objectToFB: (StudyNote object, fb.Builder fbb) {
          final noteOffset = fbb.writeString(object.note);
          fbb.startTable(4);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, noteOffset);
          fbb.addInt64(2, object.timestamp.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final noteParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 6, '');
          final timestampParam = DateTime.fromMillisecondsSinceEpoch(
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0));
          final object = StudyNote(note: noteParam, timestamp: timestampParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        }),
    UserPreference: obx_int.EntityDefinition<UserPreference>(
        model: _entities[10],
        toOneRelations: (UserPreference object) => [],
        toManyRelations: (UserPreference object) => {},
        getId: (UserPreference object) => object.id,
        setId: (UserPreference object, int id) {
          object.id = id;
        },
        objectToFB: (UserPreference object, fb.Builder fbb) {
          final keyOffset = fbb.writeString(object.key);
          final valueOffset = fbb.writeString(object.value);
          fbb.startTable(36);
          fbb.addInt64(0, object.id);
          fbb.addOffset(33, keyOffset);
          fbb.addOffset(34, valueOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);
          final keyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 70, '');
          final valueParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 72, '');
          final object =
              UserPreference(id: idParam, key: keyParam, value: valueParam);

          return object;
        }),
    Contact: obx_int.EntityDefinition<Contact>(
        model: _entities[11],
        toOneRelations: (Contact object) => [],
        toManyRelations: (Contact object) => {},
        getId: (Contact object) => object.id,
        setId: (Contact object, int id) {
          object.id = id;
        },
        objectToFB: (Contact object, fb.Builder fbb) {
          final firstNameOffset = fbb.writeString(object.firstName);
          final lastNameOffset = fbb.writeString(object.lastName);
          final addressOffset = fbb.writeString(object.address);
          final phoneOffset =
              object.phone == null ? null : fbb.writeString(object.phone!);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          final picturePathOffset = object.picturePath == null
              ? null
              : fbb.writeString(object.picturePath!);
          final notesOffset =
              object.notes == null ? null : fbb.writeString(object.notes!);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addInt64(1, object.contactId);
          fbb.addOffset(2, firstNameOffset);
          fbb.addOffset(3, lastNameOffset);
          fbb.addOffset(4, addressOffset);
          fbb.addInt64(5, object.birthday?.millisecondsSinceEpoch);
          fbb.addFloat64(6, object.latitude);
          fbb.addFloat64(7, object.longitude);
          fbb.addOffset(8, phoneOffset);
          fbb.addOffset(9, emailOffset);
          fbb.addOffset(10, picturePathOffset);
          fbb.addOffset(11, notesOffset);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final birthdayValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final contactIdParam =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 6, 0);
          final firstNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 8, '');
          final lastNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 10, '');
          final addressParam = const fb.StringReader(asciiOptimization: true)
              .vTableGet(buffer, rootOffset, 12, '');
          final birthdayParam = birthdayValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(birthdayValue);
          final latitudeParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 16, 0);
          final longitudeParam =
              const fb.Float64Reader().vTableGet(buffer, rootOffset, 18, 0);
          final phoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 22);
          final picturePathParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 24);
          final notesParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 26);
          final object = Contact(
              contactId: contactIdParam,
              firstName: firstNameParam,
              lastName: lastNameParam,
              address: addressParam,
              birthday: birthdayParam,
              latitude: latitudeParam,
              longitude: longitudeParam,
              phone: phoneParam,
              email: emailParam,
              picturePath: picturePathParam,
              notes: notesParam)
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0);

          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [Bookmark] entity fields to define ObjectBox queries.
class Bookmark_ {
  /// See [Bookmark.id].
  static final id =
      obx.QueryIntegerProperty<Bookmark>(_entities[0].properties[0]);

  /// See [Bookmark.timestamp].
  static final timestamp =
      obx.QueryDateProperty<Bookmark>(_entities[0].properties[1]);

  /// See [Bookmark.book].
  static final book =
      obx.QueryStringProperty<Bookmark>(_entities[0].properties[2]);

  /// See [Bookmark.chapter].
  static final chapter =
      obx.QueryIntegerProperty<Bookmark>(_entities[0].properties[3]);

  /// See [Bookmark.verse].
  static final verse =
      obx.QueryIntegerProperty<Bookmark>(_entities[0].properties[4]);

  /// See [Bookmark.text].
  static final text =
      obx.QueryStringProperty<Bookmark>(_entities[0].properties[5]);
}

/// [Favorite] entity fields to define ObjectBox queries.
class Favorite_ {
  /// See [Favorite.id].
  static final id =
      obx.QueryIntegerProperty<Favorite>(_entities[1].properties[0]);

  /// See [Favorite.timestamp].
  static final timestamp =
      obx.QueryDateProperty<Favorite>(_entities[1].properties[1]);

  /// See [Favorite.book].
  static final book =
      obx.QueryStringProperty<Favorite>(_entities[1].properties[2]);

  /// See [Favorite.chapter].
  static final chapter =
      obx.QueryIntegerProperty<Favorite>(_entities[1].properties[3]);

  /// See [Favorite.verse].
  static final verse =
      obx.QueryIntegerProperty<Favorite>(_entities[1].properties[4]);

  /// See [Favorite.text].
  static final text =
      obx.QueryStringProperty<Favorite>(_entities[1].properties[5]);
}

/// [GospelProfile] entity fields to define ObjectBox queries.
class GospelProfile_ {
  /// See [GospelProfile.id].
  static final id =
      obx.QueryIntegerProperty<GospelProfile>(_entities[2].properties[0]);

  /// See [GospelProfile.firstName].
  static final firstName =
      obx.QueryStringProperty<GospelProfile>(_entities[2].properties[1]);

  /// See [GospelProfile.lastName].
  static final lastName =
      obx.QueryStringProperty<GospelProfile>(_entities[2].properties[2]);

  /// See [GospelProfile.address].
  static final address =
      obx.QueryStringProperty<GospelProfile>(_entities[2].properties[3]);

  /// See [GospelProfile.naturalBirthday].
  static final naturalBirthday =
      obx.QueryDateProperty<GospelProfile>(_entities[2].properties[4]);

  /// See [GospelProfile.phone].
  static final phone =
      obx.QueryStringProperty<GospelProfile>(_entities[2].properties[5]);

  /// See [GospelProfile.email].
  static final email =
      obx.QueryStringProperty<GospelProfile>(_entities[2].properties[6]);

  /// See [GospelProfile.spiritualBirthday].
  static final spiritualBirthday =
      obx.QueryDateProperty<GospelProfile>(_entities[2].properties[7]);
}

/// [MapInfo] entity fields to define ObjectBox queries.
class MapInfo_ {
  /// See [MapInfo.id].
  static final id =
      obx.QueryIntegerProperty<MapInfo>(_entities[3].properties[0]);

  /// See [MapInfo.name].
  static final name =
      obx.QueryStringProperty<MapInfo>(_entities[3].properties[1]);

  /// See [MapInfo.filePath].
  static final filePath =
      obx.QueryStringProperty<MapInfo>(_entities[3].properties[2]);

  /// See [MapInfo.downloadUrl].
  static final downloadUrl =
      obx.QueryStringProperty<MapInfo>(_entities[3].properties[3]);

  /// See [MapInfo.isTemporary].
  static final isTemporary =
      obx.QueryBooleanProperty<MapInfo>(_entities[3].properties[4]);

  /// See [MapInfo.latitude].
  static final latitude =
      obx.QueryDoubleProperty<MapInfo>(_entities[3].properties[5]);

  /// See [MapInfo.longitude].
  static final longitude =
      obx.QueryDoubleProperty<MapInfo>(_entities[3].properties[6]);

  /// See [MapInfo.zoomLevel].
  static final zoomLevel =
      obx.QueryIntegerProperty<MapInfo>(_entities[3].properties[7]);
}

/// [Prayer] entity fields to define ObjectBox queries.
class Prayer_ {
  /// See [Prayer.id].
  static final id =
      obx.QueryIntegerProperty<Prayer>(_entities[4].properties[0]);

  /// See [Prayer.prayerId].
  static final prayerId =
      obx.QueryStringProperty<Prayer>(_entities[4].properties[1]);

  /// See [Prayer.richTextJson].
  static final richTextJson =
      obx.QueryStringProperty<Prayer>(_entities[4].properties[2]);

  /// See [Prayer.status].
  static final status =
      obx.QueryStringProperty<Prayer>(_entities[4].properties[3]);

  /// See [Prayer.timestamp].
  static final timestamp =
      obx.QueryDateProperty<Prayer>(_entities[4].properties[4]);
}

/// [VerseData] entity fields to define ObjectBox queries.
class VerseData_ {
  /// See [VerseData.id].
  static final id =
      obx.QueryIntegerProperty<VerseData>(_entities[5].properties[0]);

  /// See [VerseData.book].
  static final book =
      obx.QueryStringProperty<VerseData>(_entities[5].properties[1]);

  /// See [VerseData.chapter].
  static final chapter =
      obx.QueryIntegerProperty<VerseData>(_entities[5].properties[2]);

  /// See [VerseData.verse].
  static final verse =
      obx.QueryIntegerProperty<VerseData>(_entities[5].properties[3]);

  /// See [VerseData.text].
  static final text =
      obx.QueryStringProperty<VerseData>(_entities[5].properties[4]);
}

/// [BibleNote] entity fields to define ObjectBox queries.
class BibleNote_ {
  /// See [BibleNote.id].
  static final id =
      obx.QueryIntegerProperty<BibleNote>(_entities[6].properties[0]);

  /// See [BibleNote.verse].
  static final verse =
      obx.QueryStringProperty<BibleNote>(_entities[6].properties[1]);

  /// See [BibleNote.verseText].
  static final verseText =
      obx.QueryStringProperty<BibleNote>(_entities[6].properties[2]);

  /// See [BibleNote.note].
  static final note =
      obx.QueryStringProperty<BibleNote>(_entities[6].properties[3]);

  /// See [BibleNote.timestamp].
  static final timestamp =
      obx.QueryDateProperty<BibleNote>(_entities[6].properties[4]);
}

/// [GospelOnboardingModel] entity fields to define ObjectBox queries.
class GospelOnboardingModel_ {
  /// See [GospelOnboardingModel.id].
  static final id = obx.QueryIntegerProperty<GospelOnboardingModel>(
      _entities[7].properties[0]);

  /// See [GospelOnboardingModel.onboardingComplete].
  static final onboardingComplete =
      obx.QueryBooleanProperty<GospelOnboardingModel>(
          _entities[7].properties[1]);

  /// See [GospelOnboardingModel.homeSelectedFont].
  static final homeSelectedFont =
      obx.QueryStringProperty<GospelOnboardingModel>(
          _entities[7].properties[2]);

  /// See [GospelOnboardingModel.homeSelectedFontSize].
  static final homeSelectedFontSize =
      obx.QueryDoubleProperty<GospelOnboardingModel>(
          _entities[7].properties[3]);

  /// See [GospelOnboardingModel.lastSelectedBook].
  static final lastSelectedBook =
      obx.QueryStringProperty<GospelOnboardingModel>(
          _entities[7].properties[4]);

  /// See [GospelOnboardingModel.lastSelectedChapter].
  static final lastSelectedChapter =
      obx.QueryStringProperty<GospelOnboardingModel>(
          _entities[7].properties[5]);

  /// See [GospelOnboardingModel.lastSelectedStudyBook].
  static final lastSelectedStudyBook =
      obx.QueryStringProperty<GospelOnboardingModel>(
          _entities[7].properties[6]);

  /// See [GospelOnboardingModel.lastSelectedStudyChapter].
  static final lastSelectedStudyChapter =
      obx.QueryStringProperty<GospelOnboardingModel>(
          _entities[7].properties[7]);

  /// See [GospelOnboardingModel.lastBookmark].
  static final lastBookmark = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[8]);

  /// See [GospelOnboardingModel.lastFavorite].
  static final lastFavorite = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[9]);

  /// See [GospelOnboardingModel.lastBibleNote].
  static final lastBibleNote = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[10]);

  /// See [GospelOnboardingModel.lastPersonalNote].
  static final lastPersonalNote =
      obx.QueryStringProperty<GospelOnboardingModel>(
          _entities[7].properties[11]);

  /// See [GospelOnboardingModel.lastStudyNote].
  static final lastStudyNote = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[12]);

  /// See [GospelOnboardingModel.lastSearch].
  static final lastSearch = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[13]);

  /// See [GospelOnboardingModel.lastContact].
  static final lastContact = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[14]);

  /// See [GospelOnboardingModel.currentMap].
  static final currentMap = obx.QueryStringProperty<GospelOnboardingModel>(
      _entities[7].properties[15]);

  /// See [GospelOnboardingModel.readChaptersCount].
  static final readChaptersCount =
      obx.QueryIntegerProperty<GospelOnboardingModel>(
          _entities[7].properties[16]);

  /// See [GospelOnboardingModel.bookmarkCount].
  static final bookmarkCount = obx.QueryIntegerProperty<GospelOnboardingModel>(
      _entities[7].properties[17]);

  /// See [GospelOnboardingModel.favoriteCount].
  static final favoriteCount = obx.QueryIntegerProperty<GospelOnboardingModel>(
      _entities[7].properties[18]);

  /// See [GospelOnboardingModel.studiedChaptersCount].
  static final studiedChaptersCount =
      obx.QueryIntegerProperty<GospelOnboardingModel>(
          _entities[7].properties[19]);

  /// See [GospelOnboardingModel.bibleNoteCount].
  static final bibleNoteCount = obx.QueryIntegerProperty<GospelOnboardingModel>(
      _entities[7].properties[20]);

  /// See [GospelOnboardingModel.personalNoteCount].
  static final personalNoteCount =
      obx.QueryIntegerProperty<GospelOnboardingModel>(
          _entities[7].properties[21]);

  /// See [GospelOnboardingModel.studyNoteCount].
  static final studyNoteCount = obx.QueryIntegerProperty<GospelOnboardingModel>(
      _entities[7].properties[22]);

  /// See [GospelOnboardingModel.searchCount].
  static final searchCount = obx.QueryIntegerProperty<GospelOnboardingModel>(
      _entities[7].properties[23]);
}

/// [PersonalNote] entity fields to define ObjectBox queries.
class PersonalNote_ {
  /// See [PersonalNote.id].
  static final id =
      obx.QueryIntegerProperty<PersonalNote>(_entities[8].properties[0]);

  /// See [PersonalNote.note].
  static final note =
      obx.QueryStringProperty<PersonalNote>(_entities[8].properties[1]);

  /// See [PersonalNote.timestamp].
  static final timestamp =
      obx.QueryDateProperty<PersonalNote>(_entities[8].properties[2]);
}

/// [StudyNote] entity fields to define ObjectBox queries.
class StudyNote_ {
  /// See [StudyNote.id].
  static final id =
      obx.QueryIntegerProperty<StudyNote>(_entities[9].properties[0]);

  /// See [StudyNote.note].
  static final note =
      obx.QueryStringProperty<StudyNote>(_entities[9].properties[1]);

  /// See [StudyNote.timestamp].
  static final timestamp =
      obx.QueryDateProperty<StudyNote>(_entities[9].properties[2]);
}

/// [UserPreference] entity fields to define ObjectBox queries.
class UserPreference_ {
  /// See [UserPreference.id].
  static final id =
      obx.QueryIntegerProperty<UserPreference>(_entities[10].properties[0]);

  /// See [UserPreference.key].
  static final key =
      obx.QueryStringProperty<UserPreference>(_entities[10].properties[1]);

  /// See [UserPreference.value].
  static final value =
      obx.QueryStringProperty<UserPreference>(_entities[10].properties[2]);
}

/// [Contact] entity fields to define ObjectBox queries.
class Contact_ {
  /// See [Contact.id].
  static final id =
      obx.QueryIntegerProperty<Contact>(_entities[11].properties[0]);

  /// See [Contact.contactId].
  static final contactId =
      obx.QueryIntegerProperty<Contact>(_entities[11].properties[1]);

  /// See [Contact.firstName].
  static final firstName =
      obx.QueryStringProperty<Contact>(_entities[11].properties[2]);

  /// See [Contact.lastName].
  static final lastName =
      obx.QueryStringProperty<Contact>(_entities[11].properties[3]);

  /// See [Contact.address].
  static final address =
      obx.QueryStringProperty<Contact>(_entities[11].properties[4]);

  /// See [Contact.birthday].
  static final birthday =
      obx.QueryDateProperty<Contact>(_entities[11].properties[5]);

  /// See [Contact.latitude].
  static final latitude =
      obx.QueryDoubleProperty<Contact>(_entities[11].properties[6]);

  /// See [Contact.longitude].
  static final longitude =
      obx.QueryDoubleProperty<Contact>(_entities[11].properties[7]);

  /// See [Contact.phone].
  static final phone =
      obx.QueryStringProperty<Contact>(_entities[11].properties[8]);

  /// See [Contact.email].
  static final email =
      obx.QueryStringProperty<Contact>(_entities[11].properties[9]);

  /// See [Contact.picturePath].
  static final picturePath =
      obx.QueryStringProperty<Contact>(_entities[11].properties[10]);

  /// See [Contact.notes].
  static final notes =
      obx.QueryStringProperty<Contact>(_entities[11].properties[11]);
}
